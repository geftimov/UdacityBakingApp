apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.eftimoff.bakingapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }
}

dependencies {

    /////////////////////////////////////////////////////
    ///              RELEASE LIBRARIES                ///
    /////////////////////////////////////////////////////

    //Support libraries
    compile rootProject.ext.dependencies.supportCompat
    compile rootProject.ext.dependencies.supportCardView
    compile rootProject.ext.dependencies.supportDesign
    compile rootProject.ext.dependencies.constraintLayout
    //Dependency injection
    compile rootProject.ext.dependencies.dagger
    annotationProcessor rootProject.ext.dependencies.daggerCompiler
    //ButterKnife
    compile rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies.butterknifeCompiler
    //Gson serialization library
    compile rootProject.ext.dependencies.gson
    //RxJava
    compile rootProject.ext.dependencies.rxandroid
    compile rootProject.ext.dependencies.rxjava
    //Images
    compile rootProject.ext.dependencies.glide
    compile rootProject.ext.dependencies.glideOkHttp
    annotationProcessor rootProject.ext.dependencies.glideCompiler
    //Network
    compile rootProject.ext.dependencies.okhttp
    compile rootProject.ext.dependencies.okhttpLogging
    compile rootProject.ext.dependencies.retrofit
    compile rootProject.ext.dependencies.retrofitGson
    compile rootProject.ext.dependencies.retroftiRxJava
    //ExoPlayer
    compile rootProject.ext.dependencies.exoPlayer

    /////////////////////////////////////////////////////
    ///            INSTRUMENTATION TESTS              ///
    /////////////////////////////////////////////////////

    // Espresso UI Testing dependencies
    androidTestCompile rootProject.ext.dependencies.espressoCore
    androidTestCompile rootProject.ext.dependencies.espressoIntents
    androidTestCompile rootProject.ext.dependencies.espressoContrib

    // Android Testing Support Library's runner, rules and assertion
    androidTestCompile rootProject.ext.dependencies.testRules
    androidTestCompile rootProject.ext.dependencies.testRunner
    androidTestCompile rootProject.ext.dependencies.assertjAndroid

    // Spoon
    androidTestCompile rootProject.ext.dependencies.spoon

    // Idling Resources
    androidTestCompile rootProject.ext.dependencies.espressoIdlingResource
    androidTestCompile rootProject.ext.dependencies.espressoIdlingConcurrent
    androidTestCompile rootProject.ext.dependencies.espressoIdlingNet

    /////////////////////////////////////////////////////
    ///                  UNIT TESTS                   ///
    /////////////////////////////////////////////////////

    // Dependencies for local unit tests
    testCompile rootProject.ext.dependencies.leakcanaryNoOp
    testCompile rootProject.ext.dependencies.junit
    testCompile rootProject.ext.dependencies.mockito
    testCompile rootProject.ext.dependencies.assertJ
    testCompile rootProject.ext.dependencies.assertjAndroid
}
